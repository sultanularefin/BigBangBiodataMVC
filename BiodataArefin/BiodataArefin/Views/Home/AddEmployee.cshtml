@model BiodataArefin.EF.Employee

@{
    ViewBag.Title = "AddEmployee";
    Layout = "~/Views/Shared/ArefinLayout.cshtml";
}

<style>
    .btn {
        /*margin-left:7px;
        margin-right:7px;*/
        border-left: 10px;
    }

    .topbuttonsDiv {
        margin-bottom: 40px;
    }
</style>



<h2>User Biodata</h2>

@using (Html.BeginForm())
            {
    @Html.AntiForgeryToken()



    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">


        <div class="form-group col-xs-10 col-sm-6 col-md-5 col-lg-6">
            <label class="control-label col-md-2">User ID:</label>

            <div class="col-md-10">
                @Html.EditorFor(model => model.userId, new
           {
               htmlAttributes = new { @class = "form-control", @disabled = "disabled", @Value = "Auto" }
           })


            </div>
        </div>

        <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
            @Html.LabelFor(model => model.firstname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.firstname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.firstname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="clearfix"></div>

        <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
            @Html.LabelFor(model => model.lastname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
            @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="clearfix"></div>


        <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", @id = "datepicker1" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
            @Html.LabelFor(model => model.expected_salary, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: auto" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.expected_salary, new { htmlAttributes = new { @class = "form-control input-sm pull-left" } })
                @Html.ValidationMessageFor(model => model.expected_salary, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
            @Html.LabelFor(model => model.expected_salary, new { htmlAttributes = new { @class = "control-label col-md-2", @style = "font-size:xx-small" } })
            <div class="col-md-10">
            @Html.EditorFor(model => model.expected_salary, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.expected_salary, "", new { @class = "text-danger" })
            </div>
            </div>*@

        <div class="clearfix"></div>


        <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
            <label class="control-label col-md-2">Religion:</label>

            <div class="col-md-10">
                @Html.DropDownListFor(model => model.religionId, ViewBag.selectallReligions as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "dropdown txt medium-input", @id = "course-time" })

            </div>
        </div>


        <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
            @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.genderId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.genderId, "", new { @class = "text-danger" })*@

                @Html.RadioButtonFor(model => model.gender, true, new { @checked = "true" }) Male
                @Html.RadioButtonFor(model => model.gender, false) Female
            </div>
        </div>

        <div class="clearfix"></div>
        <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
            @Html.LabelFor(model => model.mobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mobileNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mobileNo, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="clearfix"></div>

    </div>




    <div class="form-group topbuttonsDiv" style="float:right">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save to Database" class="btn btn-danger" />
        </div>
    </div>

}
<style>
    .table > tr > td {
        width: 1%;
        white-space: nowrap;
        width: auto !important;
    }

    .table > tr > th {
        width: 1%;
        white-space: nowrap;
    }
</style>

<h2>Educational Qualifications</h2>

<div class="boxer">
    <div class="box-row">
        <!--Headings-->
        <div class="box">@Html.DisplayName("Exam & department")</div>
        <div class="box">@Html.DisplayName("Institute/ University & Board")</div>
        <div class="box">@Html.DisplayName("Passing Year")</div>
        <div class="box">@Html.DisplayName("Grade")</div>
        <div class="box">@Html.DisplayName("Action")</div>

    </div>

    <div class="box-row">
        <div id="dataRow0"></div>

    </div>



    <!-- End of 'box-row' -->
    <!-- Start of 'box-row' -->
    <div class="box-row" id="inputRow">
        <div class="box"><input type="text" id="Exam_department" value="" autocomplete="off" /></div>
        <div class="box"><input type="text" id="Institute_University_Board" value="" autocomplete="off" /></div>

        <div class="box center"><input type="text" id="PassingYear" value="" autocomplete="off" /></div>
        <div class="box center"><input type="text" id="Grade" value="" autocomplete="off" /></div>
        <div class="box center">
            <button class="btn btn-success" id="addempdtls" onclick="Addjs();">Add</button>
        </div>

    </div>


</div>

@*@Html.DropDownListFor(model => model.projectId, ViewBag.selectProjects as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "dropdown", @id = "ddlproject", onchange = "getAssignee(" + a.id + ")" })*@





@*<table id="dataTable"></table>*@

<div class="clearfix"></div>
@if (ViewBag.success == 1)
{


    <h4 class="alert alert-success">
        <strong>@ViewBag.Message</strong>
    </h4>
    <h1>
        <a href="@Url.Action("EmployeeInfoInPDF", "Home", new { id = Model.id })">
            <span class="glyphicon glyphicon-print"></span>&nbsp;
            click here to View PDF
        </a>
    </h1>



}

@if (ViewBag.success == 0)
            {
    <h4 class="alert alert-danger">
        <strong>@ViewBag.Message</strong>
    </h4>
}





@section scripts {
    <script src="~/Scripts/jquery-3.2.1.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.js"></script>
    <link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
    <link href="~/Content/divTableCSS.css" rel="stylesheet" />

    <script src="~/Scripts/jquery.validate.unobtrusive.bootstrap.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>

    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script type="text/javascript">



        $(function () {
            //alert("x");
            $("#datepicker1").datepicker();
        });


        $(window).on('load', function () {

            // on refresh delete json data
            $.ajax({
                method: "POST",
                //url: '/Task/getemployeeByProject?projectId=' + projectId + '&LoggerId=' + employeeinsession,
                url: '/Home/index',
                success: function (jsondata) {
                    alert("page refresh detected page reload will clear the saved data in json file which sotres employee dtls data");
                }

            });

        });



        //function ViewPdf(employeeId) {

        //    $.ajax({
        //        method: "POST",
        //        url: '/Home/EmployeeInfoInPDF?ID=' + employeeId,
        //        success: function (result) {
        //            result = Number(result);
        //            console.log(result);
        //            alert(result);
        //            if (result == -1) {
        //                //alert("You entered duplicate exam or Department names");
        //                document.getElementById("Exam_department").value = "";

        //                alert("You entered duplicate exam or Department names!")
        //                //RemoveExecution();
        //                stopFlag = 1;
        //                return;
        //            }
        //        }
        //    })

        //}


        function Addjs(sender, args) {

            var stopFlag = 0;
            var employeeDetailPopulate = "";

            var Exam_department = document.getElementById("Exam_department").value;

            var Institute_University_Board = document.getElementById("Institute_University_Board").value;

            var PassingYear = document.getElementById("PassingYear").value;

            var Grade = document.getElementById("Grade").value;


            if ((PassingYear.length) == 4) {

                PassingYear = Number(PassingYear);
                if (Number.isInteger(PassingYear) == false) {
                    alert("Passing Year should be numeric and 4 characters long");
                    document.getElementById("PassingYear").value = "";
                    return;
                }
            }
            else {
                alert("Passing Year should be numeric and 4 characters long");
                document.getElementById("PassingYear").value = "";
                return;
            }



            document.getElementById("Institute_University_Board").value = "";

            document.getElementById("Grade").value = "";

            //importvalidationscripts();

            console.log(Exam_department);


            if (parametersanitation(Exam_department)) {
                //problem found.

                alert("Please Add Exam & Department");


                return;
            }



            else if (parametersanitation(Institute_University_Board)) {
                alert("Please Add Institute/ University & Board");
                return;
            }

            //else if (parametersanitation(PassingYear)) {
            //    alert("Please Add PassingYear");
            //    return;
            //}

            else if (parametersanitation(Grade)) {
                alert("Please Add Grade");

                return;
            }


            document.getElementById("Exam_department").value = "";

            document.getElementById("PassingYear").value = "";

            $.ajax({
                method: "POST",
                url: '/Home/duplicateCheck?Exam_department=' + Exam_department,
                success: function (result) {
                    result = Number(result);
                    console.log(result);
                    //  alert(result);
                    if (result == -1) {
                        //alert("You entered duplicate exam or Department names");
                        document.getElementById("Exam_department").value = "";

                        alert("You entered duplicate exam or Department names!")
                        //RemoveExecution();
                        stopFlag = 1;
                        return;
                    }
                }
            })


            if (stopFlag != 1) {
                $.ajax({
                    method: "POST",
                    //url: '/Task/getemployeeByProject?projectId=' + projectId + '&LoggerId=' + employeeinsession,
                    url: '/Home/storeEmployeeDetailsByEmployeeID?Exam_department=' + Exam_department + '&Institute_University_Board=' + Institute_University_Board + '&PassingYear=' + PassingYear + '&Grade=' + Grade,


                    success: function (jsondata) {


                        console.log(jsondata);


                        //<div class="box-row" id="dataRow">
                        jQuery.each(jsondata, function (index, value) {




                            employeeDetailPopulate = employeeDetailPopulate +
                                '<div class="box-row" id="dataRow"><div class="box">' + value.examORDepartment +
                                '</div><div class="box">' +
                                value.instituteUniBoard + '</div><div class="box">' +
                                value.passingYear + '</div><div class="box">' + value.grade + '</div><div class="box">' + '<button class="btn btn-success" id="addempdtls" onclick="Addjs();">Edit(Not_IMplemented)</button>' + '</div>' + '</div>';


                        });

                        //employeeDetailPopulate = employeeDetailPopulate;

                        console.log(employeeDetailPopulate);

                        if (stopFlag === 0) {

                            jQuery('#dataRow0').html(employeeDetailPopulate);
                        }
                        else {
                            return;
                        }




                        //jQuery('#dataRow').html(employeeDetailPopulate)
                        //jQuery('#dataRow').html(employeeDetailPopulate);

                    }

                })

            }


            //console.log(stopFlag);




        }



        function parametersanitation(value) {


            value = value.replace(/ /g, ''); //  white space sanitation


            if (!value || value == "" || value.length == 0) {
                return true;
            }
        }

        function RemoveExecution() {
            alert("at removeExecution()")
            return;
        }

    </script>

}


